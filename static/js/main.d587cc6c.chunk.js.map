{"version":3,"sources":["components/WindowResize.js","components/Nav.js","DCList.js","FCList.js","App.js","serviceWorker.js","index.js"],"names":["WindowResize","_ref","width","height","react_default","a","createElement","className","concat","Nav","react_router_dom","to","DCList","id","name","FCList","dcid","Users","lazy","__webpack_require__","e","then","bind","Posts","DCs","FCs","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSize","setState","prevState","wWidth","target","innerWidth","wHeight","innerHeight","getUserList","asyncToGenerator","regenerator_default","mark","_callee","resp","userlist","wrap","_context","prev","next","fetch","sent","json","users","stop","catch","alert","getData","_callee2","userList","userPosts","commentList","_context2","Promise","all","posts","comments","dclist","fclist","console","log","state","window","addEventListener","removeEventListener","_this2","components_Nav","react_router","exact","path","render","components_WindowResize","react","fallback","isAuthed","feed","commentlist","showHideComment","React","Component","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d587cc6c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst WindowResize = ({width,height})=>{\r\n\treturn(\r\n\t\t<div className=\"f3 white resizecard\">\r\n\t\t\t{`this window is ${width}px wide and ${height}px high`}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default WindowResize;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Nav = ()=>{\r\n\treturn(\r\n\t\t<ul className=\"navlinks\">\r\n\t\t\t<Link to=\"/\">\r\n\t\t\t\t<li className=\"navlink\">Home</li>\r\n\t\t\t</Link>\r\n\t\t\t<li className=\"navlink\">About</li>\r\n\t\t\t<Link to=\"/users\">\r\n\t\t\t\t<li className=\"navlink\">Users</li>\r\n\t\t\t</Link>\r\n\t\t\t<Link to=\"/posts\">\r\n\t\t\t\t<li className=\"navlink\">Posts</li>\r\n\t\t\t</Link>\r\n\t\t\t<Link to=\"/DC\">\r\n\t\t\t\t<li className=\"navlink\">DCs</li>\r\n\t\t\t</Link>\r\n\t\t\t\r\n\t\t</ul>\r\n\t\t)\r\n}\r\n\r\nexport default Nav;","export const DCList = [\r\n  {\r\n    id: 1,\r\n    name: 'Bangalore'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Pune'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Mysore'\r\n  }\r\n  ];","export const FCList = [\r\n  {\r\n    id: 1,\r\n    name: 'Terminal',\r\n    dcid: 1\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Kasa',\r\n    dcid: 1\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'FC1',\r\n    dcid: 2\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Amoeba',\r\n    dcid: 3\r\n  },\r\n  ];","import React,{lazy,Suspense} from 'react';\nimport './App.css';\nimport WindowResize from './components/WindowResize';\nimport Nav from './components/Nav';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {DCList} from './DCList.js';\nimport {FCList} from './FCList.js';\n//import Async from 'react-async';\nconst Users = lazy(() => import('./components/Users'));\nconst Posts = lazy(()=>import('./components/Posts'));\nconst DCs = lazy(()=>import('./components/DCComp.js'));\nconst FCs = lazy(()=>import('./components/FCComp.js'));\n//const Dclist = lazy(()=>import('./DCs.js'));\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      wWidth:window.innerWidth,\n      wHeight:window.innerHeight,\n      users:[],\n      posts:[],\n      comments:[],\n      dclist:[],\n      fclist:[]\n    }\n  }\n  componentDidMount(){\n    window.addEventListener(\"resize\",this.updateSize);\n    this.getData();\n  }\n\n  updateSize=(e)=>{\n    this.setState(function(prevState){\n      return {wWidth:e.target.innerWidth,wHeight:e.target.innerHeight}\n    });\n  }\n  getUserList = ()=>{\n    (async ()=>{\n      let resp = await fetch(\"https://jsonplaceholder.typicode.com/users/\");\n      let userlist = await resp.json();\n      this.setState(function(){\n        return {users:userlist}  \n      })\n    })().catch(e=>alert(e));\n  }\n  getData = ()=>{\n    (async ()=>{\n      let resp = await Promise.all([\n        fetch(\"https://jsonplaceholder.typicode.com/users/\"),\n        fetch(\"https://jsonplaceholder.typicode.com/posts/\"),\n        fetch(\"https://jsonplaceholder.typicode.com/comments\")\n        ])\n      let userList = await resp[0].json();\n      let userPosts = await resp[1].json();\n      let commentList = await resp[2].json();\n      this.setState(function(){\n        return {users:userList,posts:userPosts,comments:commentList,\n          dclist:DCList,\n          fclist:FCList\n        }\n      })\n    })().catch(e=>alert(e));\n    console.log(\"dclist--\",this.state.dclist);\n  }\n  componentWillUnmount(){\n    window.removeEventListener(\"resize\",this.updateSize(0,0));\n  }\n  render(){\n  return (\n    <div className=\"App\">\n    <Router>\n      <header className=\"App-header\">\n        <Nav/>\n      </header>\n      \n      <Switch>\n      <Route exact path=\"/\"\n        render={()=>\n          <WindowResize width={this.state.wWidth} height={this.state.wHeight} />\n        }\n      />\n      <Route path=\"/users\" \n        render={() => \n          <Suspense fallback={'Loading...'}>\n            <Users userlist={this.state.users} isAuthed={true} />\n          </Suspense>\n        }\n      />\n      <Route path=\"/posts\"\n        render={()=>\n          <Suspense fallback={'Loading...'}>\n            <Posts feed={this.state.posts} userlist={this.state.users} commentlist={this.state.comments} showHideComment={this.showHideComment}/>\n          </Suspense>\n        }\n      />\n      <Route exact path=\"/DC\"\n        render={()=>\n          <Suspense fallback={'Loading...'}>\n            <DCs dclist={this.state.dclist}/>\n          </Suspense>\n        }\n      />\n      <Route path=\"/dcid\"\n        render={()=>\n          <Suspense fallback={'Loading...'}>\n            <FCs fclist={this.state.fclist}/>\n          </Suspense>\n        }\n      />\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}